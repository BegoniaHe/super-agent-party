name: Build and Release
on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install --system -r requirements.txt
          uv pip install --system pyinstaller

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build Python backend
        run: |
          pyinstaller server.spec
          mkdir -p dist/server || true

      - name: Build Unsigned macOS App
        shell: bash
        if: matrix.os == 'macos-latest'
        run: |
          # 解除临时目录权限限制
          sudo chmod -R a+rwx /Users/runner/work/_temp
          
          # 强制禁用签名
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          
          npx electron-builder build --mac --publish always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Other Platforms
        shell: bash
        if: matrix.os != 'macos-latest'
        run: |
          case "${{ matrix.os }}" in
            windows-latest)
              npx electron-builder build --win --publish always
              ;;
            ubuntu-latest)
              npx electron-builder build --linux --publish always
              ;;
          esac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}