name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            artifact_name: super-agent-party-win
          - os: macos-latest
            artifact_name: super-agent-party-mac
          - os: ubuntu-latest
            artifact_name: super-agent-party-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv pip install --system -r requirements.txt
          uv pip install --system pyinstaller

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build Python backend
        shell: bash
        run: |
          export PYINSTALLER_DO_NOT_SIGN=1
          
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            find . -name "*.framework" -exec rm -rf {} \; || true
          fi
          
          pyinstaller --noconfirm \
            --clean \
            --log-level WARN \
            server.spec

          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            find dist -name '*.dylib' -exec codesign --force --deep -s - {} \;
            codesign --force --deep -s - dist/server/server.exe
          fi

      - name: Build Electron app
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            windows-latest) npm run build:win ;;
            macos-latest) 
              npm run build:mac
              find release -name '*.app' -exec codesign --force --deep -s - {} \;
              ;;
            *) npm run build:linux ;;
          esac

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.0
        with:
          name: ${{ matrix.artifact_name }}
          path: release/

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Automated release for ${{ github.ref_name }}
          files: |
            super-agent-party-win/release/*.exe
            super-agent-party-mac/release/*.dmg
            super-agent-party-linux/release/*.AppImage
            super-agent-party-linux/release/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
