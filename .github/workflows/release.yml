name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node Dependencies
        run: npm install

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Python Dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Python Backend
        shell: bash
        run: |
          pyinstaller server.spec
          mkdir -p release/server
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv dist/server/* release/server/
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv "dist/server.app" release/server/
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv dist/server/* release/server/
            chmod +x release/server/server
          fi

      - name: Build Electron App
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/**/*.exe
            release/**/*.dmg
            release/**/*.AppImage
            release/**/*.deb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
